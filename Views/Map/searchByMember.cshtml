@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html>
<head>
    <title>Simple Map</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <style type="text/css">
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }

        /* Optional: Makes the sample page fill the window. */
        html,
        main, div, /* father/child tags all need css settings to height 100%! */
        body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    @*<script>
          let map;

          function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
              center: { lat: @ViewBag.resultLat, lng: @ViewBag.resultLng },
              zoom: 18,
            });
            new google.maps.Marker({
                  position: { lat: @ViewBag.resultLat, lng: @ViewBag.resultLng },
                  map,
                  animation: google.maps.Animation.DROP,
                  title: "hi",
                  icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendC.png",
            });
          }
        </script>*@
    <script>
        let map;

        function initMap(lat, lng) {

            if (lng !== "l") {
                var coor = new google.maps.LatLng(lat, lng);
                var mbr = new google.maps.LatLng(25.0339400, 121.5435000);  //fixed for now

                map = new google.maps.Map(document.getElementById("map"), {
                    center: coor,
                    zoom: 18,
                });

                new google.maps.Marker({
                    position: mbr,
                    map,
                    title: "YOU",
                    icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendD.png",
                });

                new google.maps.Marker({
                    position: coor,
                    map,
                    animation: google.maps.Animation.DROP,
                    title: "collect spot",
                    icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendC.png",
                });
            }
            else {
                var mbr = new google.maps.LatLng(25.0339400, 121.5435000);  //fixed for now

                map = new google.maps.Map(document.getElementById("map"), {
                    center: mbr,
                    zoom: 17,
                });

                new google.maps.Marker({
                    position: mbr,
                    map,
                    title: "YOU",
                    icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendD.png",
                });

                //console.log(typeof lat);
                for (let i = 0; i < lat.length; i++) {
                    new google.maps.Marker({
                        position: { lat: lat[i]["Latitude"], lng: lat[i]["Longitude"] },
                        map,
                        animation: google.maps.Animation.DROP,
                        title: lat[i]["Address"],
                        icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendC.png",
                    });
                }
            }
        }
    </script>
</head>
<body onload="init100M()">
    @*<button onclick="init100M()">100M</button>*@
    <div id="map" style="height: 50%;width: 100%;"></div>
    @*<button onclick="clearContent()">100M</button>*@
    <br />

    <label id="labelAddress">搜尋新地址：</label>
    <select id="selectCity" onchange="getDistrict('#selectDistric')" asp-items="ViewBag.CityId">
        <option hidden id="optionCity">請選擇</option>
    </select>
    <select id="selectDistric">
        <option hidden id="optionCity">請選擇</option>
    </select>
    <input id="txtAddress" />

    <button onclick="captureSelect(),clearContent()">get new location's json</button>

    <select id="rangeLevel" onchange="">
        <option hidden>請選擇</option>
        <option>300公尺內</option>
        <option>200公尺內</option>
        <option>100公尺內</option>
    </select>

    <table class="table" id="table100m">
        <tbody id="header">
            <tr>
                <th>收集地點</th>
                <th onclick="orderByTime()" id="thOrderTime">到達時間</th>
                <th onclick="orderByDistance()" id="thOrderDistance">距離（公尺）</th>
                @*<th style="display:none">lat</th>
                    <th style="display:none">lng</th>*@
            </tr>
        </tbody>
        <tbody id="content"></tbody>
    </table>

    @*<button onclick="initMap(@ViewBag.resultLat, @ViewBag.resultLng)">1</button>
        <button onclick="initMap(@ViewBag.result[1].Latitude, @ViewBag.result[1].Longitude)">2</button>
        <button onclick="initMap(@ViewBag.result[2].Latitude, @ViewBag.result[2].Longitude)">3</button>*@

    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBircB99P_RvzxWdQT-hk40-h3Ofzlb_vQ&callback=initMap&libraries=&v=weekly"
            async></script>
    <script>
        let table100m = document.getElementById("table100m");
        let tbodycont = document.getElementById("content");

        var js;  //store material from backend

        var timeOrder = -1;
        var distanceOrder = -1;

        function init100M() {
            $.ajax({
                url: "/map/spotlessthan100m",
                type: "GET",
                success: function (listJsonString) {
                    js = JSON.parse(listJsonString);
                    //js = js.sort(function (a, b) {
                    //    return a.ArrivalTime < b.ArrivalTime ? -1 : 1;
                    //});
                    initMap(js, "l");
                    for (let i = 0; i < js.length; i++) {
                        tbodycont.innerHTML +=
                            '<tr onclick="initMap(' + js[i]["Latitude"] + ',' + js[i]["Longitude"] + ')">'
                            + '<th>' + js[i]["Address"] + '</th>'
                            + '<th>' + js[i]["ArrivalTime"] + '</th>'
                            + '<th>' + js[i]["distance"] + '</th>'
                            //+ '<th style="display:none">' + js[i]["Latitude"] + '</th>'
                            //+ '<th style="display:none">' + js[i]["Longitude"] + '</th>'
                            + '</tr>';
                    }
                }
            })
        }

        function clearContent() {
            document.getElementById("content").remove();
            console.log(js);
            //todo: test if global-var content still available after refresh/F5
        }

        function orderByTime() {
            document.getElementById("content").remove();
            var ele = document.createElement("tbody");
            ele.id = "content";
            js = js.sort(function (a, b) {
                return a.ArrivalTime < b.ArrivalTime ? timeOrder : -1 * timeOrder;
            });
            for (let i = 0; i < js.length; i++) {
                ele.innerHTML +=
                    '<tr onclick="initMap(' + js[i]["Latitude"] + ',' + js[i]["Longitude"] + ')">'
                    + '<th>' + js[i]["Address"] + '</th>'
                    + '<th>' + js[i]["ArrivalTime"] + '</th>'
                    + '<th>' + js[i]["distance"] + '</th>'
                    + '</tr>';
            }

            table100m.appendChild(ele);

            if (timeOrder == -1) {
                document.getElementById("thOrderTime").innerText = "到達時間（遞增↑）";
            }
            else {
                document.getElementById("thOrderTime").innerText = "到達時間（遞減↓）";
            }

            document.getElementById("thOrderDistance").innerText = "距離（公尺）";
            timeOrder = timeOrder * -1;
        }

        function orderByDistance() {
            document.getElementById("content").remove();
            var ele = document.createElement("tbody");
            ele.id = "content";
            js = js.sort(function (a, b) {
                return a.distance < b.distance ? distanceOrder : -1 * distanceOrder;
            });
            for (let i = 0; i < js.length; i++) {
                ele.innerHTML +=
                    '<tr onclick="initMap(' + js[i]["Latitude"] + ',' + js[i]["Longitude"] + ')">'
                    + '<th>' + js[i]["Address"] + '</th>'
                    + '<th>' + js[i]["ArrivalTime"] + '</th>'
                    + '<th>' + js[i]["distance"] + '</th>'
                    + '</tr>';
            }

            table100m.appendChild(ele);

            if (distanceOrder == -1) {
                document.getElementById("thOrderDistance").innerText = "距離（公尺）（遞增↑）";
            }
            else {
                document.getElementById("thOrderDistance").innerText = "距離（公尺）（遞減↓）";
            }

            document.getElementById("thOrderTime").innerText = "到達時間";
            distanceOrder = distanceOrder * -1;
        }

        function captureSelect() {
            console.log($('#selectCity :selected').text());
            console.log($('#selectDistric :selected').text());
            console.log($('#txtAddress').val());
        }
    </script>
</body>
</html>