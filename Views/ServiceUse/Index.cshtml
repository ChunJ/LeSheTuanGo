@using System;
@{
    Layout = "_layoutWide";
    ViewData["Title"] = "搜尋服務 - ";
    int[] sizeNumber = new int[7] { 3, 5, 14, 25, 33, 75, 120 };
}
<div class="row h-100">
    @*search column*@
    <div class="col-4 column-main pb-2">
        <div class="row">
            <div class="border-bottom-dark col-12">
                <h5 onclick="fillDemo()">搜尋團購</h5>
            </div>
            <div class="col-12 pb-4">
                <div class="form-group">
                    <label>城市</label>
                    <select id="CityId" class="form-control" onchange="getDistrict('#DistrictId')" asp-items="ViewBag.City"></select>
                </div>
                <div class="form-group">
                    <label>鄉鎮市區</label>
                    <select name="DistrictId" id="DistrictId" class="form-control"></select>
                </div>
                <div class="form-group">
                    <label>地址</label>
                    <input class="form-control" id="addressInput" type="text" value=@ViewData["Address"] />
                </div>
                <div class="form-group">
                    <label for="distance" class="control-label">距離</label>
                    <select class="form-control" asp-items="ViewBag.GoRange" id="distance"></select>
                </div>
                <label>垃圾袋尺寸及袋數</label>
                <div id="sizeInputGroup1">
                    @for (int i = 0; i < sizeNumber.Length; i++) {
                        <div class="form-group">
                            <label>@sizeNumber[i]公升</label>
                            <input class="form-control" type="number" value="0" min="0" />
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="column-btn py-1">
            <button class="btn btn-primary" onclick="searchStart()">搜尋</button>
            <a class="btn btn-primary" href="/ChatMessageRecords/Index">查看紀錄</a>
        </div>
    </div>
        @*<div class="col-12">
        <label class="w-100">垃圾袋尺寸</label>
        @for (int i = 0; i < sizeNumber.Length; i++) {
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" onchange="sizeInputSwitch1(@i)">
                <label class="form-check-label">@sizeNumber[i]</label>
            </div>
        }
        </div>*@
    
    @*result column*@
    <div class="col-2">
        <div class="column-main">
            <div class="border-bottom-dark">
                <h5 onclick="test()">搜尋結果</h5>
            </div>
            <div id="searchResult">
                @*@for (int i = 0; i < 5; i++) {
            <div class="accordion-go" onclick="accorClick(this)">
                <p>台北市大安區信義路四段2號</p>
            </div>
            <div class="accordion-panel">
                <form method="post" action="/Buy/Join">
                    <input hidden name="OrderId" value="" />
                    <input hidden name="ComeDistrictId" value="" />
                    <input hidden name="ComeAddress" value="" />
                    @for (int i = 0; i < sizeNumber.Length; i++) {
                        <div class="form-group">
                            <label>@sizeNumber[i] 公升</label>
                            <input class="form-control" name="@("L"+sizeNumber[i]+"count")" type="number" min="0" value="" />
                        </div>
                    }
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <input class="form-check-input" type="checkbox" name="NeedCome" value="true" />
                            是否需要宅配服務?
                        </label>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="購買" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        }*@
            </div>
        </div>
    </div>
    @*map column*@
    <div class="col-6">
        <div id="map" style="height: 100%;width: 100%;"></div>
    </div>
</div>

@section Scripts {
    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBircB99P_RvzxWdQT-hk40-h3Ofzlb_vQ&callback=showMap&libraries=&v=weekly"async></script>
    <script>
        let bagSize = [3, 5, 14, 25, 33, 75, 120];
        let cityS = document.querySelector("#CityId");
        let distS = document.querySelector("#DistrictId");
        let addressIn = document.querySelector("#addressInput");
        let distanceS = document.querySelector("#distance");
        let result = document.querySelector("#searchResult");
        //let detailView = document.querySelector("#detailView");
        let mapDiv = document.querySelector("#map");
        let sizeInputG1 = document.querySelectorAll("#sizeInputGroup1>div");
        let sizeCountG1 = document.querySelectorAll("#sizeInputGroup1>div>input");
        //for detail and submit
        //let infoGroup = document.querySelectorAll("#detailInfo span#info");
        //let formInputs = document.querySelectorAll("#formInput input");
        //let sizeInputG2 = document.querySelectorAll("#sizeInputGroup2>div");
        //let sizeCountG2 = document.querySelectorAll("#sizeInputGroup2>div>input");
        //other variable
        let lastAddress = "";
        let lastDistrict = 0;
        let queryList = [];
        let fList = [];
        let map;
        let markers = [];
        let AccornList = [];
        let lastAccord = null;
    
        window.onload = function () {
            cityS.value = @ViewData["CityId"];
            fillDistrict(@ViewData["CityId"], "#DistrictId", function () {
                distS.value = @ViewData["DistrictId"];
            });
        }
        function test() {
            //showMap(25.03, 121.54);
            console.log(formInputs);
        }
        function fillDemo() {
            addressIn.value = "信義路四段2號";
            distS.value = 5;
        }
        //not used
        function sizeInputSwitch1(id) {
            if (event.target.checked == true) {
                sizeInputG1[id].classList.remove("d-none");
                sizeCountG1[id].value = 1;
            } else {
                sizeInputG1[id].classList.add("d-none");
                sizeCountG1[id].value = 0;
            }
        }
        function accorClick(accor) {
            let panel = accor.nextElementSibling;
            console.log(accor);
            if (accor.classList.contains("accordion-active")) {
                accor.classList.remove("accordion-active");
                panel.style.maxHeight = null;
                if (lastAccord == accor) {
                    //repeat on active
                    lastAccord = null;
                }
            } else {
                accor.classList.add("accordion-active");
                panel.style.maxHeight = panel.scrollHeight + "px";
                if (lastAccord != null) {
                    lastAccord.classList.remove("accordion-active");
                    lastAccord.nextElementSibling.style.maxHeight = null;
                }
                lastAccord = accor
            }
        }
        function searchStart() {
            lastAccord = null
            //send new request if address is changed
            if (distS.value == lastDistrict && addressIn.value == lastAddress) {
                filterResult();
            } else {
                lastDistrict = distS.value;
                lastAddress = addressIn;
                $.get(
                    "/ServiceUse/Search",
                    {
                        DistrictInput: distS.value,
                        addressInput: addressIn.value
                    },
                    function (data, status) {
                        if (status == "success") {
                            //console.log(data);
                            queryList = JSON.parse(data);
                            filterResult();
                        }
                    }
                )
            }
        }
        function filterResult() {
            ////add cango filter test
            fList = [];
            for (let r of queryList) {
                if (r.Distance <= distanceS.options[distanceS.selectedIndex].text
                    && r.L3available >= sizeCountG1[0].value
                    && r.L5available >= sizeCountG1[1].value
                    && r.L14available >= sizeCountG1[2].value
                    && r.L25available >= sizeCountG1[3].value
                    && r.L33available >= sizeCountG1[4].value
                    && r.L75available >= sizeCountG1[5].value
                    && r.L120available >= sizeCountG1[6].value
                ) {
                    fList.push(r);
                }
            }
            showResult();
        }
        function showResult() {
            //implement page count here
            if (fList.length == 0) {
                result.innerHTML = `<h4>沒有符合條件的搜尋結果</h4>`;
            } else {
                let htmlString = "";
                //format datetime and distance
                for (let i = 0; i < fList.length; i++) {
                    //use the index in filterList as id, so we can just get offer info from filterList later.
                    htmlString += `<div class="accordion-go" onclick="accorClick(this)">`;
                    htmlString += `${fList[i].CityName}${fList[i].DistrictName}${fList[i].Address}`;
                    htmlString += `</div>`;
                    //htmlString += `<div class="w-100"><div class="rem-4">宅配服務</div><span class="px-1">:</span>${fList[i].CanGo?"有":"不"}提供</div></div>`;
                    htmlString += `<div class="accordion-panel"><form method="post" action="/ServiceUse/Join">`;
                    htmlString += `<div class="py-2"><div class="w-100"><div class="rem-4">截止時間</div><span class="px-1">:</span>${formatDatetime(fList[i].EndTime)}</div>`;
                    htmlString += `<div class="w-100"><div class="rem-4">距離</div><span class="px-1">:</span>${parseInt(fList[i].Distance, 10)} 公尺</div></div>`;
                    htmlString += `<input hidden name="GarbageServiceOfferId" value="${fList[i].GarbageServiceOfferId}" />`;
                    htmlString += `<input hidden name="ComeDistrictId" value="${distS.value}" />`;
                    htmlString += `<input hidden name="ComeAddress" value="${addressIn.value}" />`;
                    let avail = [
                        fList[i].L3available,
                        fList[i].L5available,
                        fList[i].L14available,
                        fList[i].L25available,
                        fList[i].L33available,
                        fList[i].L75available,
                        fList[i].L120available
                    ];
                    for (let j = 0; j < avail.length; j++) {
                        if (avail[j] > 0) {
                            htmlString += `<div class="form-group"><label>${bagSize[j]} 公升</label><input class="form-control" name="${'L' + bagSize[j] + 'count'}" type="number" min="0" value="${sizeCountG1[j].value}" max="${avail[j]}"/></div>`;
                        } else {
                            htmlString += `<input hidden name="${'L' + bagSize[j] + 'count'}" type="number" value="0"/>`;
                        }
                    }
                    if (fList[i].CanGo) {
                        htmlString += `<div class="form-group form-check"><label class="form-check-label">`;
                        htmlString += `<input class="form-check-input" type="checkbox" name="NeedCome" value="true" />`;//fill checked
                        htmlString += `是否需要到府服務?</label></div>`;
                    } else {
                        htmlString += `<input hidden type="checkbox" name="NeedCome" value="true"/>`;
                        htmlString += `<p>不提供到府服務</p>`;
                    }
                    htmlString += `<div class="form-group"><input type="submit" value="加入" class="btn btn-primary" /></div></form></div>`;
                }
                showAllMap();
                result.innerHTML = htmlString;
                AccornList = result.querySelectorAll("div.accordion-go");
            }
        }
        function getDetail(id) {
        //fill view + update map + turn visible
            infoGroup[0].innerText = fList[id].Address;
            infoGroup[1].innerText = parseInt(fList[id].Distance, 10);
            infoGroup[2].innerText = formatDatetime(fList[id].EndTime);
            formInputs[0].value = fList[id].GarbageServiceId;
            formInputs[1].value = fList[id].DistrictId;
            formInputs[2].value = fList[id].Address;
            if (fList[id].CanGo) {
                //need to use the filter option
                formInputs[3].checked = false;
                formInputs[3].disabled = false;
            } else {
                formInputs[3].checked = false;
                formInputs[3].disabled = true;
            }
            let avail = [
                fList[id].L3available,
                fList[id].L5available,
                fList[id].L14available,
                fList[id].L25available,
                fList[id].L33available,
                fList[id].L75available,
                fList[id].L120available
            ];
            for (let i = 0; i < avail.length; i++) {
                if (avail[i] > 0) {
                    sizeInputG2[i].classList.remove("d-none");
                    sizeCountG2[i].max = avail[i];
                    sizeCountG2[i].value = sizeCountG1[i].value;
                } else {
                    sizeInputG2[i].classList.add("d-none");
                    sizeCountG2[i].value = 0;
                }
            }
            //showMap(fList[id].Latitude, fList[id].Longitude);
            detailView.classList.remove("invisible");
        }
        function showAllMap() {
            let mapCenter = new google.maps.LatLng(fList[0].userLat, fList[0].userLong);
            map = new google.maps.Map(mapDiv,
                {
                    center: mapCenter,
                    zoom: 17,
                });
            new google.maps.Marker({
                position: mapCenter,
                map,
                title: "您的位置",
                icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendD.png",
            });
            markers = [];
            for (let i = 0; i < fList.length; i++) {
                let marker = new google.maps.Marker({
                    position: { lat: fList[i].Latitude, lng: fList[i].Longitude },
                    map,
                    title: fList[i].Address,
                    label: { text: i + "", color: "transparent" },
                });
                marker.addListener("click", () => {
                    console.log(markers[i].title);
                    //document.getElementById(markers[i].label.text).scrollIntoView();
                    //getDetail(marker.label.text);
                    accorClick(AccornList[marker.label.text]);
                });
                markers.push(marker);
            }
        }
        function showMap(lat, lng) {
            let coor = new google.maps.LatLng(lat, lng);
            let mbr = new google.maps.LatLng(25.0339400, 121.5435000);  //fixed for now
            map = new google.maps.Map(mapDiv,
                {
                    center: coor,
                    zoom: 17,
                });
            new google.maps.Marker({
                position: mbr,
                map,
                title: "您的位置",
            });
            new google.maps.Marker({
                position: coor,
                map,
                title: "服務位置",
                icon: "https://crd-rubbish.epd.ntpc.gov.tw/maps/images/icon/Icon_LegendD.png",
            });
        }
    </script>
}